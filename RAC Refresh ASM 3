Refreshing a 2-node Oracle RAC production database to a 2-node Oracle RAC development database using RMAN in a Windows environment requires careful planning. Here‚Äôs a step-by-step approach for a zero-downtime monthly refresh process.

üî• Goal
Refresh Dev RAC ASM environment with Prod RAC ASM database

Use RMAN DUPLICATE method

Zero downtime for Prod RAC

Automate the process for monthly refresh

üöÄ Pre-Requisites
‚úÖ Both Prod & Dev RACs are on Windows
‚úÖ Same Oracle version, OS, and patch level
‚úÖ ASM configured on both environments
‚úÖ Sufficient FRA & ASM space in Dev
‚úÖ TNS connectivity between Prod & Dev
‚úÖ RMAN catalog setup (optional but recommended)
‚úÖ Ensure SCAN & VIP configurations are correct

üîµ Step 1: Prepare the DEV RAC Environment
1.1. Shut Down the Dev Database
Login to Dev RAC Node as SYSDBA:

sql
Copy
Edit
srvctl stop database -d DEVDB
Delete existing ASM files (ONLY for fresh refresh):

sql
Copy
Edit
asmcmd
rm -rf +DATA/DEVDB/*
rm -rf +FRA/DEVDB/*
exit
If you are using a Flash Recovery Area (FRA), clean it:

sql
Copy
Edit
rm -rf +FRA/DEVDB/*
1.2. Create Required Directories on Dev
On both Dev RAC nodes, create required paths:

powershell
Copy
Edit
mkdir C:\oracle\admin\DEVDB\adump
mkdir C:\oracle\oradata\DEVDB
mkdir C:\oracle\fra\DEVDB
üî¥ Step 2: Set Up RMAN Backup on Prod (Zero Downtime)
2.1. Take Full RMAN Backup (Without Shutting Down Prod)
On Prod Node 1, run:

powershell
Copy
Edit
rman target sys/ProdPass@PRODDB catalog rman/RMANPass@RMAN_CATALOG
Execute:

rman
Copy
Edit
RUN {
  ALLOCATE CHANNEL CH1 DEVICE TYPE DISK;
  ALLOCATE CHANNEL CH2 DEVICE TYPE DISK;
  BACKUP AS COMPRESSED BACKUPSET DATABASE FORMAT 'C:\RMAN_Backups\PRODDB_%U.bkp';
  BACKUP CURRENT CONTROLFILE FORMAT 'C:\RMAN_Backups\CTRL_PRODDB.bkp';
  BACKUP SPFILE FORMAT 'C:\RMAN_Backups\SPFILE_PRODDB.bkp';
  RELEASE CHANNEL CH1;
  RELEASE CHANNEL CH2;
}
2.2. Backup the Archive Logs
rman
Copy
Edit
BACKUP ARCHIVELOG ALL FORMAT 'C:\RMAN_Backups\ARC_%U.bkp' DELETE INPUT;
2.3. Copy Backups from Prod to Dev
Copy the backup files (C:\RMAN_Backups) from Prod to Dev using robocopy or scp:

powershell
Copy
Edit
robocopy C:\RMAN_Backups \\DEVNODE1\C$\RMAN_Backups /MIR
robocopy C:\RMAN_Backups \\DEVNODE2\C$\RMAN_Backups /MIR
Ensure backups are available in C:\RMAN_Backups on Dev.

üü¢ Step 3: Restore Database on Dev
3.1. Set Environment Variables on Dev
Set Oracle Home & ASM variables:

powershell
Copy
Edit
set ORACLE_SID=DEVDB1
set ORACLE_HOME=C:\oracle\product\19.0.0\dbhome_1
3.2. Start the Database in NOMOUNT Mode
On Dev Node 1, run:

powershell
Copy
Edit
sqlplus / as sysdba
Execute:

sql
Copy
Edit
startup nomount pfile='C:\oracle\admin\DEVDB\initDEVDB.ora';
If missing, create an initDEVDB.ora:

sql
Copy
Edit
*.db_name='DEVDB'
*.memory_target=4G
*.control_files='+DATA/DEVDB/control01.ctl','+FRA/DEVDB/control02.ctl'
üü† Step 4: RMAN Duplicate to Dev
4.1. Connect RMAN on Dev
powershell
Copy
Edit
rman target sys/DevPass@DEVDB auxiliary sys/DevPass@DEVDB1
4.2. Restore Control File
rman
Copy
Edit
RUN {
  ALLOCATE CHANNEL CH1 DEVICE TYPE DISK;
  RESTORE CONTROLFILE FROM 'C:\RMAN_Backups\CTRL_PRODDB.bkp';
  ALTER DATABASE MOUNT;
  RELEASE CHANNEL CH1;
}
4.3. Restore & Recover Database
rman
Copy
Edit
RUN {
  ALLOCATE CHANNEL CH1 DEVICE TYPE DISK;
  ALLOCATE CHANNEL CH2 DEVICE TYPE DISK;
  SET NEWNAME FOR DATABASE TO '+DATA';
  RESTORE DATABASE;
  RECOVER DATABASE;
  RELEASE CHANNEL CH1;
  RELEASE CHANNEL CH2;
}
4.4. Recover Archivelogs
rman
Copy
Edit
RECOVER DATABASE USING BACKUP CONTROLFILE UNTIL CANCEL;
Enter AUTO when prompted.

üîµ Step 5: Rename Redo Logs & Create Temporary Tablespace
5.1. Rename Redo Logs (If Required)
Login to SQL*Plus:

sql
Copy
Edit
ALTER DATABASE RENAME FILE '+DATA/PRODDB/redo01.log' TO '+DATA/DEVDB/redo01.log';
ALTER DATABASE RENAME FILE '+DATA/PRODDB/redo02.log' TO '+DATA/DEVDB/redo02.log';
5.2. Add TEMP Tablespace
sql
Copy
Edit
ALTER DATABASE ADD TEMPFILE '+DATA/DEVDB/temp01.dbf' SIZE 512M;
üü¢ Step 6: Open Dev Database with Resetlogs
6.1. Open Database
rman
Copy
Edit
ALTER DATABASE OPEN RESETLOGS;
6.2. Re-enable Archive Logging
sql
Copy
Edit
ALTER DATABASE FORCE LOGGING;
ALTER SYSTEM SWITCH LOGFILE;
üü† Step 7: Reconfigure RAC for Dev
7.1. Register DB with CRS
powershell
Copy
Edit
srvctl add database -d DEVDB -o C:\oracle\product\19.0.0\dbhome_1
7.2. Add RAC Instances
powershell
Copy
Edit
srvctl add instance -d DEVDB -i DEVDB1 -n DEVNODE1
srvctl add instance -d DEVDB -i DEVDB2 -n DEVNODE2
7.3. Start RAC Services
powershell
Copy
Edit
srvctl start database -d DEVDB
srvctl status database -d DEVDB
üî¥ Step 8: Validate the Refresh
8.1. Verify the Database Role
sql
Copy
Edit
SELECT database_role FROM v$database;
Should return PRIMARY.

8.2. Verify Tablespaces & Datafiles
sql
Copy
Edit
SELECT tablespace_name, file_name FROM dba_data_files;
8.3. Verify FRA & Archive Logs
sql
Copy
Edit
SELECT name, space_used FROM v$recovery_file_dest;
‚úÖ Final Checklist
‚úîÔ∏è Prod database is live (No Downtime)
‚úîÔ∏è Dev database successfully refreshed
‚úîÔ∏è All ASM & FRA files correctly restored
‚úîÔ∏è RAC services reconfigured and running

üöÄ Automate the Process
You can automate RMAN refresh using Windows Task Scheduler with a batch script:

powershell
Copy
Edit
rman cmdfile=C:\scripts\refresh_dev.rman log=C:\scripts\refresh_dev.log
Schedule it to run monthly.

This guide ensures a zero-downtime refresh of your Prod RAC ASM to Dev RAC ASM every month using RMAN. Let me know if you need additional tweaks! üöÄüî•
