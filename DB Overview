#!/bin/bash

# Define the location of the oratab file
ORATAB="/etc/oratab"

# Check if the oratab file exists
if [[ ! -f $ORATAB ]]; then
    echo "Error: oratab file not found at $ORATAB"
    exit 1
fi

# Print header for the output
echo -e "Oracle Database Overview\n"
echo -e "Instance\tStatus\t\tVersion\t\tDatabase Name\tArch\tLog Mode\tRole\tProtection Mode\tDG Sync\tFRA Usage\tSGA Size"
echo -e "--------\t------\t\t-------\t\t-------------\t----\t--------\t----\t---------------\t-------\t--------\t--------"

# Loop through each entry in the oratab file
while IFS=: read -r SID ORACLE_HOME AUTOSTART; do
    # Skip comments and empty lines
    [[ "$SID" =~ ^#.* ]] && continue
    [[ -z "$SID" || -z "$ORACLE_HOME" ]] && continue

    # Set Oracle environment variables
    export ORACLE_SID=$SID
    export ORACLE_HOME=$ORACLE_HOME
    export PATH=$ORACLE_HOME/bin:$PATH

    # Check if the instance is running
    STATUS=$($ORACLE_HOME/bin/sqlplus -s / as sysdba <<EOF
SET HEADING OFF FEEDBACK OFF VERIFY OFF ECHO OFF
SELECT 'RUNNING' FROM v\\$instance WHERE status = 'OPEN';
EXIT;
EOF
)
    STATUS=$(echo "$STATUS" | xargs) # Trim whitespace

    # If status is empty, the database is not running
    if [[ -z "$STATUS" ]]; then
        STATUS="NOT RUNNING"
        echo -e "$SID\t\t$STATUS\t\tN/A\t\tN/A\t\tN/A\tN/A\tN/A\tN/A\t\tN/A\t\tN/A"
        continue
    fi

    # Get additional information
    INFO=$($ORACLE_HOME/bin/sqlplus -s / as sysdba <<EOF
SET HEADING OFF FEEDBACK OFF VERIFY OFF ECHO OFF
SELECT 
    (SELECT version FROM v\\$instance),
    (SELECT db_unique_name FROM v\\$database),
    (SELECT archiver FROM v\\$instance),
    (SELECT log_mode FROM v\\$database),
    (SELECT database_role FROM v\\$database),
    (SELECT protection_mode FROM v\\$database),
    (SELECT sync_status FROM v\\$archive_dest_status WHERE dest_id = 2 AND status = 'VALID' FETCH FIRST 1 ROW ONLY),
    (SELECT ROUND((space_used / space_limit) * 100, 2) || '%' || ' (' || space_limit/1024/1024 || ' MB)' 
     FROM v\\$recovery_file_dest),
    (SELECT ROUND(value / 1024 / 1024, 2) || ' MB' FROM v\\$parameter WHERE name = 'sga_target')
FROM dual;
EXIT;
EOF
)

    # Parse the output into variables
    INFO=($(echo "$INFO" | xargs))
    VERSION=${INFO[0]}
    DB_UNIQUE_NAME=${INFO[1]}
    ARCHIVER_STATUS=${INFO[2]}
    LOG_MODE=${INFO[3]}
    ROLE=${INFO[4]}
    PROTECTION_MODE=${INFO[5]}
    DG_SYNC_STATUS=${INFO[6]}
    FRA_USAGE=${INFO[7]:-"N/A"} # Default to "N/A" if FRA is not configured
    SGA_SIZE=${INFO[8]:-"N/A"} # Default to "N/A" if SGA info is not available

    # Print instance details
    echo -e "$SID\t\t$STATUS\t\t$VERSION\t$DB_UNIQUE_NAME\t$ARCHIVER_STATUS\t$LOG_MODE\t$ROLE\t$PROTECTION_MODE\t$DG_SYNC_STATUS\t$FRA_USAGE\t$SGA_SIZE"

done < "$ORATAB"

echo -e "\nOverview complete."

OUTPUT ::

Oracle Database Overview

Instance    Status          Version         Database Name    Arch    Log Mode   Role       Protection Mode      DG Sync     FRA Usage       SGA Size
--------    ------          -------         -------------    ----    --------   ----       ---------------      -------     --------       --------
ORCL        RUNNING         19.0.0.0.0      ORCLDB           STARTED ARCHIVELOG PRIMARY    MAXIMUM PERFORMANCE  SYNCED      45.32% (20480 MB)  8192 MB
STANDBY     RUNNING         19.0.0.0.0      STANDBYDB        STARTED ARCHIVELOG STANDBY    MAXIMUM PERFORMANCE  SYNCED      12.43% (10240 MB)  4096 MB
TESTDB      NOT RUNNING     N/A             N/A              N/A     N/A       N/A        N/A                  N/A         N/A             N/A

Overview complete.
